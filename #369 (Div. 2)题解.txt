Codeforces Round #369 (Div. 2)
Div2 A:题解：ZS和Chris坐bus去旅游，要上车啦。(滴滴。。学生卡。。）规定他们两个人一定要坐在一起。如果最先找出的pair座位就坐下，就输出YES并标志为++。否则输出NO。复杂度O(n)。水题。

Div2 B:题解：给你一个n*n的矩阵，然后保证矩阵中有且只有一个0，然后要你在0的位置变成一个数，使得矩阵的行，列，斜加起来都相等。让你求这个数。（1<=ans<=10^18）。记录0的位置，随便计算一下两行的sum，在check一下行，列，斜就可以啦。复杂度O(n^2)。注意特判n=1时，输出1。

Div2 C:题解：给你n棵树，m种颜色的颜料。让你用这m种颜料去把没有颜色的树染色。0代表uncolored，其他数字代表有颜色且不能再染色。在给你m*n的矩阵，分别对应其颜料用量。问你最少要多少颜料才能把这些树染成k种颜色分明的树。dp题。
设dp[i][j][k]表示前i棵树，颜色为j，最后一棵树为k时使用最少的颜料。
所以：（a[i]:树，b[i]:颜料用量）
第i棵树有颜色时：
dp[i][a[i]][k+(a[i]!=j)]=min(dp[i][a[i]][k+(a[i]!=j)],dp[i-1][j-1][k-1])
第i棵树没有颜色时：
dp[i][l][k+(l!=j)]=min(dp[i][l][k+(l!=j)],dp[i-1][j][k]+b[i][l])
复杂度O(n^4)。敢写敢过....

Div2 D:题解：给你n个城镇，然后A(i)表示一条有向边：i-->A(i)。给你一个nn点nn边的无向图，你可以翻转任意几条边，但是每条边只能翻转一次，问你有多少种方案，使得这个图不存在环。对于当前的环，此时大小为num,那么我们可以不断选择1条、2条、n-1条边翻转使得环不存在。
ans+=2^(num)-2 就是2^num减去全部翻转，和全部不翻转的方案。对于不在环上的边：ans=ans*2^(n-num)。复杂度O(n)。

Div2 E:题解：规定有2^n天，有k个小朋友，问你这些小朋友在这2^n天，至少有两个小朋友的生日在同一天的概率是多少。特判：如果人数多于天数，就一定有至少2个人是同一天的。